# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml


# using Radium development dedicated image
image: stormirit/radium_dev:latest

#https://docs.gitlab.com/ee/ci/yaml/#extends
.branches_with_ci:
  only:
    - master

stages: 
  - deps
  # - build
  # - test
  - doc
  # - format

# cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - build/
cache:
  key: cache
  paths:
    - apt-cache/
    - build/

before_script:
  # - rm -r apt-cache
  # - mkdir -pv apt-cache
  - |-
    if [ -e apt-cache ]; then
      cp -rT apt-cache/ /;
    fi
  # - find apt-cache

deps:
  stage: deps
  script:
    - |-
      rm -rf apt-cache
      if [ ! -e apt-cache ]; then
        apt update
        apt install -y doxygen cmake-format clang-format python3-pip

        mkdir -pv apt-cache/usr/bin/
        mkdir -pv apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules
        mkdir -pv apt-cache/usr/lib/x86_64-linux-gnu/
        mkdir -pv apt-cache/usr/lib/llvm-11/bin/
        # mkdir -pv apt-cache/usr/lib/


        cp /usr/bin/doxygen apt-cache/usr/bin/   
        cp /usr/share/cmake-*/Modules/FindDoxygen.cmake apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules/
        cp /usr/lib/x86_64-linux-gnu/libclang-* apt-cache/usr/lib/x86_64-linux-gnu/
        cp /usr/bin/cmake-format apt-cache/usr/bin/
        cp /usr/bin/clang-format apt-cache/usr/bin/
        cp /usr/bin/clang-format-11 apt-cache/usr/bin/
        cp /usr/lib/llvm-11/bin/clang-format apt-cache/usr/lib/llvm-11/bin/
        
        cp -ar /usr/lib/python* apt-cache/usr/lib/
        cp /usr/bin/pip3 apt-cache/usr/bin/
        cp /usr/bin/pip apt-cache/usr/bin/
        cp /usr/bin/python3 apt-cache/usr/bin/
        cp -a /usr/bin/python3.9 apt-cache/usr/bin/
        cp -r /usr/share/python* apt-cache/usr/share/
        # cp -r /usr/lib/python3* apt-cache/usr/lib/
        
        pip3 install breathe sphinx-sitemap sphinx-rtd-theme
        cp -r ~/.local/bin/* apt-cache/bin/

        find apt-cache
      fi


# artifacts:
#     # key: ${CI_COMMIT_REF_SLUG}
#     expire_in: 30 days
#     paths:
# #      - build/_deps/
#       - build/
      
# build:
#   stage: build
# #  before_script:
# #    - export PATH=$PATH:/opt/Qt/5.10.0/gcc_64/bin
#   script:
#     # - apt update
#     # - apt install -y doxygen
#     - mkdir -p build
#     - cd build
#     - cmake -DCMAKE_BUILD_TYPE=Release -DHUB_ENABLE_TESTS=ON -DHUB_BUILD_DOC=ON ..
#     - cmake --build . --config Release
  
# test:
#   stage: test
#   script:
#     - cd build/tests
#     - ctest -V
# #    - ./runmytests.sh

# pages:
#   # stage: doc
#   script:
#     # - apt update
#     # - apt install -y doxygen
#     - cmake --build build --target docs
#     - mv build/doc/docs_doxygen/html/ public/
# #    - ./runmytests.sh
#   artifacts:
#     paths:
#     - public
#   # only:
#     # - feature/add-gitlab-pages-support

doc:
  stage: doc
  script:
    - make -C doc/docs_sphinx html
    - mv doc/docs_sphinx/_build/html public/
  artifacts:
    paths:
      - public
  # only:
  # - master


# format:
#   stage: format
#   script:
#     - scripts/cleanup-project.sh
#     - git diff --exit-code
#   # only:
#   # - master


