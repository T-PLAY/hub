# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml


# using Radium development dedicated image
image: stormirit/radium_dev:latest

#https://docs.gitlab.com/ee/ci/yaml/#extends
.branches_with_ci:
  only:
    - master

stages: 
  - dep
  # - doc
  - build
  - test
  - doc
  - format


# .before_script_template:
# # # dep:
# #   # stage: dep
# #   # script:
#   before_script:
# #   # stage: ['build', 'doc']
# #   # script:
# #   # - apk update
# #   # - apk add doxygen
#     - apt update
#     - apt install -y doxygen

# cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - build/

cache:
  key: cache
  paths:
    - apt-cache/
    - build/
    # files:
      # - /usr/bin/doxygen
      # - /usr/share/cmake-*/Modules/FindDoxygen.cmake
  

before_script:
    # if [ -e apt-cache ]; then
    - mkdir -pv apt-cache
    - cp -r apt-cache/* /

    - find apt-cache
    # fi

      # cp apt-cache/doxygen /usr/bin/doxygen;
      # cp apt-cache/FindDoxygen.cmake /usr/share/cmake-*/Modules/;
    # fi
  # - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR

dep:
  stage: dep
  script:
    # - apt update -yq && apt -o dir::cache::archives="$APT_CACHE_DIR" install -y doxygen
    - apt update
    - apt install -y doxygen
    # - ls /usr/bin/
    # - ls /usr/local/bin
    # - ls ~
    # - mkdir -pv apt-cache
    - mkdir -pv apt-cache/usr/bin/
    - cp /usr/bin/doxygen apt-cache/usr/bin/   
    - mkdir -pv apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules
    - cp /usr/share/cmake-*/Modules/FindDoxygen.cmake apt-cache/apt-cache/usr/share/cmake-*/Modules/


# artifacts:
#     # key: ${CI_COMMIT_REF_SLUG}
#     expire_in: 30 days
#     paths:
# #      - build/_deps/
#       - build/
      
build:
  # extends: .before_script_template
  stage: build
#  before_script:
#    - export PATH=$PATH:/opt/Qt/5.10.0/gcc_64/bin
  script:
    # - apt update
    # - apt install -y doxygen
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=Release -DHUB_ENABLE_TESTS=ON -DHUB_BUILD_DOC=ON ..
    - cmake --build . --config Release
  


#  artifacts:
#    paths:
#      - mybinary
      # depending on your build setup it's most likely a good idea to cache outputs to reduce the build time
      # cache:
      #   paths:
      #     - "*.o"

# run tests using the binary built before
test:
  stage: test
  
  script:
    - cd build/tests
    - ctest -V
#    - ./runmytests.sh

pages:
  # extends: .before_script_template
  # stage: doc

  script:
    # - apt update
    # - apt install -y doxygen
    - cmake --build build --target docs
    - mv build/doc/docs_doxygen/html/ public/
#    - ./runmytests.sh

  artifacts:
    paths:
    - public
  
  # only:
    # - feature/add-gitlab-pages-support

doc:
  stage: doc
  script:
    - apt update
    - apt install -y doxygen python3-pip
    - pip3 install breathe sphinx-sitemap sphinx-rtd-theme
    - make -C doc/docs_sphinx html
    - mv doc/docs_sphinx/_build/html public/
  artifacts:
    paths:
      - public
  only:
  - master


format:
  stage: format
  script:
    - apt update
    - apt install -y cmake-format clang-format
    - scripts/cleanup-project.sh
    - git diff --stat --exit-code
  only:
  - master


