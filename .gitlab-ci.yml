# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/C++.gitlab-ci.yml


# using Radium development dedicated image
image: stormirit/radium_dev:latest

#https://docs.gitlab.com/ee/ci/yaml/#extends
.branches_with_ci:
  only:
    - master

stages: 
  - dep
  - build
  # - test
  - doc
  - format

# cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - build/
cache:
  key: cache
  paths:
    # - apt-cache/ 
    - doxygen-cache/
    - sphinx-cache/
    - format-cache/
    - build-gcc-release/
    - build-clang-debug/
 

# before_script:
  # - rm -r apt-cache
  # - mkdir -pv apt-cache
  # - |-
  #   if [ -e apt-cache ]; then
  #     cp -rT apt-cache/ /;
  #   fi
  #   if [ -e sphinx-cache ]; then
  #     cp -rT sphinx-cache/ /;
  #   fi
  # - find apt-cache

# dep:
#   stage: dep
#   script:
#     - |-
#       rm -rf build*

#       # rm -rf apt-cache
#       if [ ! -e apt-cache ]; then
#         apt update
#         apt install -y doxygen cmake-format clang-format python3-pip clang libclang-dev

#         mkdir -pv apt-cache/usr/bin/
#         mkdir -pv apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules
#         mkdir -pv apt-cache/usr/lib/x86_64-linux-gnu/
#         mkdir -pv apt-cache/usr/lib/llvm-11/bin/
#         mkdir -pv apt-cache/usr/lib/llvm-11/lib/
#         # mkdir -pv apt-cache/usr/lib/


#         cp /usr/bin/doxygen apt-cache/usr/bin/   
#         cp /usr/share/cmake-*/Modules/FindDoxygen.cmake apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules/
#         cp /usr/share/cmake-*/Modules/FindThreads.cmake apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules/

#         cp /usr/lib/x86_64-linux-gnu/libclang-* apt-cache/usr/lib/x86_64-linux-gnu/
#         cp -ra /usr/lib/llvm-11/lib/* apt-cache/usr/lib/llvm-11/lib/
#         cp /usr/bin/cmake-format apt-cache/usr/bin/
#         # cp /usr/bin/clang-format apt-cache/usr/bin/
#         # cp /usr/bin/clang-format-11 apt-cache/usr/bin/
#         cp /usr/lib/llvm-11/bin/clang-format apt-cache/usr/lib/llvm-11/bin/
#         cp /usr/bin/clang* apt-cache/usr/bin/
#         cp /usr/lib/x86_64-linux-gnu/libpthread* apt-cache/usr/lib/x86_64-linux-gnu/
        
#         cp -ar /usr/lib/python* apt-cache/usr/lib/
#         cp -ar /usr/lib/clang* apt-cache/usr/lib/
#         cp -a /usr/lib/x86_64-linux-gnu/libclang* apt-cache/usr/lib/x86_64-linux-gnu/
#         cp /usr/bin/pip3 apt-cache/usr/bin/
#         cp /usr/bin/pip apt-cache/usr/bin/
#         cp /usr/bin/python3 apt-cache/usr/bin/
#         cp -a /usr/bin/python3.9 apt-cache/usr/bin/
#         cp -r /usr/share/python* apt-cache/usr/share/
#         # cp -r /usr/lib/python3* apt-cache/usr/lib/
        
#         # find apt-cache
#       fi
 
#       rm -rf sphinx-cache
#       if [ ! -e sphinx-cache ]; then
#         sphinx install breathe sphinx sphinx-sitemap sphinx-rtd-theme
#         # cp -r ~/.local/bin/* apt-cache/bin/
#         mkdir -pv sphinx-cache/bin/
#         mkdir -pv sphinx-cache/usr/lib/

#         sleep 2
#         # ls /root/.local/bin/
#         ls /usr/local/bin
#         find / -name "sphinx-build"
#         # ls /usr/bin/sphinx*
#         ls /usr/local/bin/
#         # cp /usr/local/bin/sphinx-build sphinx-cache/bin/
#         cp -ar /usr/local/lib/python* sphinx-cache/usr/lib/
#         # python3 -m site --user-base
#         # ls /root/.local/
#         # ls /usr/local/bin
#         # ls /usr/local/lib
#         # find sphinx-cache
#       fi


# artifacts:
#     # key: ${CI_COMMIT_REF_SLUG}
#     expire_in: 30 days
#     paths:
# #      - build/_deps/
#       - build/

cache-doxygen:
  stage: dep
  script:
    - |-
      # rm -rf doxygen-cache
      if [ ! -e doxygen-cache ]; then
        apt update
        apt install -y doxygen clang

        mkdir -pv doxygen-cache/usr/bin/
        mkdir -pv doxygen-cache/usr/share/$(basename /usr/share/cmake-*)/Modules
        mkdir -pv doxygen-cache/usr/lib/x86_64-linux-gnu/
        mkdir -pv doxygen-cache/usr/lib/llvm-11/lib/

        cp /usr/bin/doxygen doxygen-cache/usr/bin/   
        cp /usr/share/cmake-*/Modules/FindDoxygen.cmake doxygen-cache/usr/share/$(basename /usr/share/cmake-*)/Modules/

        # cp -ar /usr/lib/clang* sphinx-cache/usr/lib/
        cp -a /usr/lib/x86_64-linux-gnu/libclang* doxygen-cache/usr/lib/x86_64-linux-gnu/
        #         cp /usr/lib/x86_64-linux-gnu/libclang-* apt-cache/usr/lib/x86_64-linux-gnu/
        cp -ra /usr/lib/llvm-11/lib/* doxygen-cache/usr/lib/llvm-11/lib/
      fi
      
build-gcc-release:
  stage: build
#  before_script:
#    - export PATH=$PATH:/opt/Qt/5.10.0/gcc_64/bin
  script:
    - cp -rT doxygen-cache/ /;

    # - apt update
    # - apt install -y doxygen
    - mkdir -p build-gcc-release
    - cmake -B build-gcc-release -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release -DHUB_ENABLE_TESTS=ON -DHUB_BUILD_DOC=ON
    # - cmake -B build-gcc-release -DCMAKE_CXX_COMPILER=g++ -DCMAKE_C_COMPILER=gcc -DCMAKE_BUILD_TYPE=Release
    - cmake --build build-gcc-release --config Release
    # - cd build

build-clang-debug:
  stage: build
#  before_script:
#    - export PATH=$PATH:/opt/Qt/5.10.0/gcc_64/bin
  script:
    # - cp -rT doxygen-cache/ /;
    # - apt update
    # - apt install -y libclang-dev
    - mkdir -p build-clang-debug
    - cmake -B build-clang-debug -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=install -DHUB_BUILD_STATIC_LIBRARY=ON -DHUB_ENABLE_EXAMPLES=ON 
    # - cmake -B build-clang-debug -DCMAKE_CXX_COMPILER=/usr/bin/clang++ -DCMAKE_C_COMPILER=/usr/bin/clang -DCMAKE_BUILD_TYPE=Debug
    - cmake --build build-clang-debug --config Debug
    - cmake --install build-clang-debug --config Debug
  
# test:
#   stage: test
#   script:
#     - cd build-gcc-release/tests
#     - ctest -V
# #    - ./runmytests.sh

# doc-doxygen:
#   stage: doc
#   script:
#     # - apt update
#     # - apt install -y doxygen
#     - cmake --build build-gcc-release --target docs
#     - mv build/doc/docs_doxygen/html/ public/
# #    - ./runmytests.sh
#   artifacts:
#     paths:
#     - public
#   # only:
#     # - feature/add-gitlab-pages-support



cache-sphinx:
  stage: doc
  script:
    - |-
      cp -rT doxygen-cache/ /;

      rm -rf sphinx-cache
      if [ ! -e sphinx-cache ]; then
        apt update
        apt install -y python3-pip clang
        #         apt install -y doxygen cmake-format clang-format python3-pip clang libclang-dev

       
        pip3 install breathe sphinx sphinx-sitemap sphinx-rtd-theme
        # cp -r ~/.local/bin/* apt-cache/bin/
        mkdir -pv sphinx-cache/usr/local/bin/
        mkdir -pv sphinx-cache/usr/lib/
        mkdir -pv sphinx-cache/usr/bin/
        mkdir -pv sphinx-cache/usr/local/lib/
        mkdir -pv sphinx-cache/usr/lib/llvm-11/lib/
        
        
        # mkdir -pv apt-cache/usr/bin/
        # mkdir -pv apt-cache/usr/share/$(basename /usr/share/cmake-*)/Modules
        mkdir -pv sphinx-cache/usr/lib/x86_64-linux-gnu/
        # mkdir -pv apt-cache/usr/lib/llvm-11/bin/
        # mkdir -pv apt-cache/usr/lib/llvm-11/lib/

        cp -ar /usr/lib/python* sphinx-cache/usr/lib/
        cp -ar /usr/lib/clang* sphinx-cache/usr/lib/
        cp -a /usr/lib/x86_64-linux-gnu/libclang* sphinx-cache/usr/lib/x86_64-linux-gnu/
        #         cp /usr/lib/x86_64-linux-gnu/libclang-* apt-cache/usr/lib/x86_64-linux-gnu/
        cp -ra /usr/lib/llvm-11/lib/* sphinx-cache/usr/lib/llvm-11/lib/

        # cp /usr/bin/pip3 apt-cache/usr/bin/
        # cp /usr/bin/pip apt-cache/usr/bin/
        cp -a /usr/bin/python* sphinx-cache/usr/bin/
        # cp -a /usr/bin/python3.9 sphinx-cache/usr/bin/

        # cp -r /usr/share/python* apt-cache/usr/share/
             # cp -r /usr/lib/python3* apt-cache/usr/lib/
        # ls /root/.local/bin/
        # ls /usr/local/bin
        # ls /usr/bin/sphinx*
        # ls /usr/local/bin/
        cp /usr/local/bin/sphinx-build sphinx-cache/usr/local/bin/
        # ls -la /usr/local/bin/sphinx-build
        cp -ar /usr/local/lib/python* sphinx-cache/usr/local/lib/
        # cp -ar /usr/local/lib/python* sphinx-cache/usr/lib/
        # python3 -m site --user-base

        # ls /root/.local/
        # ls /usr/local/bin
        # ls /usr/local/lib
        # find sphinx-cache
        find / -name "sphinx-build"

      fi
  only:
  - master


# doc-sphinx:
#   stage: doc
#   script:
#     - |-
#       cp -rT doxygen-cache/ /;
#       cp -rT sphinx-cache/ /;
      
#       ls -la /usr/local/bin/sphinx-build
#       find / -name "sphinx-build"
#       echo $PATH

#       # /usr/local/bin/sphinx-build

#       make -C doc/docs_sphinx html
#       mv doc/docs_sphinx/_build/html public/
#   artifacts:
#     paths:
#       - public
#   # only:
#   # - master

cache-format:
  stage: format
  script:
    - |-
      rm -rf format-cache
      if [ ! -e format-cache ]; then
        apt update
        apt install -y cmake-format clang-format

        mkdir -pv format-cache/usr/bin/
        mkdir -pv format-cache/usr/lib/llvm-11/bin/
        mkdir -pv format-cache/usr/lib/llvm-11/lib/
        mkdir -pv format-cache/usr/lib/x86_64-linux-gnu/

        cp /usr/bin/cmake-format format-cache/usr/bin/
        cp /usr/bin/clang-format format-cache/usr/bin/
        cp /usr/bin/clang-format-11 format-cache/usr/bin/
        cp /usr/lib/llvm-11/bin/clang-format format-cache/usr/lib/llvm-11/bin/

        # cp -ar /usr/lib/clang* format-cache/usr/lib/
        cp -a /usr/lib/x86_64-linux-gnu/libclang* format-cache/usr/lib/x86_64-linux-gnu/
        #         cp /usr/lib/x86_64-linux-gnu/libclang-* apt-cache/usr/lib/x86_64-linux-gnu/
        cp -ra /usr/lib/llvm-11/lib/* format-cache/usr/lib/llvm-11/lib/

        cp -a /usr/bin/python* format-cache/usr/bin/
        # cp -ar /usr/local/lib/python* format-cache/usr/local/lib/
        cp -ar /usr/lib/python* format-cache/usr/lib/


      fi
        #         apt install -y doxygen cmake-format clang-format python3-pip clang libclang-dev
    


format:
  stage: format
  script:
    - |-
      cp -rT format-cache/ /;

      scripts/cleanup-project.sh
      git diff --exit-code
  only:
  - master


