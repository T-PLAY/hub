#
# name: Matrix
# on:
#   workflow_call:
#     secrets:
#     inputs:
# #       os:
# #         type: string
# #         required: true
# jobs:
#   create-matix:
#     # runs-on: ${{ matrix.config.os }}
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     # strategy:
#     #   fail-fast: false
#     #   matrix:
#     #     config:
#     #       - { name: "Windows MSVC", os: windows-latest, cc: "cl.exe", cxx: "cl.exe", icon: "Windows"}
#     #       - { name: "Ubuntu gcc", os: ubuntu-latest, cc: "gcc", cxx: "g++", icon: "Linux" }
#     #       - { name: "MacOS clang", os: macos-latest, cc: "clang", cxx: "clang++", icon: "Apple" }
# # add the os from the outer matrix via inputs
#     # runs-on: ${{ inputs.os }}

name: Reusable workflow

on:
  workflow_call:
    # Map the workflow outputs to job outputs
    outputs:
      firstword:
        description: "The first output string"
        value: ${{ jobs.generate-json-matrix.outputs.output1 }}
      secondword:
        description: "The second output string"
        value: ${{ jobs.generate-json-matrix.outputs.output2 }}
      matrix:
        description: "Matrix of configurations"
        value: ${{ jobs.generate-json-matrix.outputs.matrix }}

jobs:
  generate-json-matrix:
    name: Generate output
    runs-on: ubuntu-latest
    # Map the job outputs to step outputs
    outputs:
      firstword: ${{ steps.step1.outputs.firstword }}
      secondword: ${{ steps.step2.outputs.secondword }}
      matrix: ${{ steps.step3.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3

      - id: step1
        run: echo "firstword=hello" >> $GITHUB_OUTPUT

      - id: step2
        run: echo "secondword=world" >> $GITHUB_OUTPUT

      - id: step3
        name: Convert config from YAML to JSON and pass it as value to matrix
        run: |
          matrix="matrix=$(yq -P -o=json config.yaml | jq -c .)"
          echo $matrix
          echo $matrix >> $GITHUB_OUTPUT
